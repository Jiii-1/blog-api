var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.773,1,3.041,2,1.443,3,0.522,4,0.45,5,0.45,6,3.287,7,0.642,8,0.039,9,0.957,10,2.616,11,3.287,12,0.522,13,0.026,14,2.198,15,1.769,16,0.032,17,0.032]],["title/modules/AppModule.html",[18,1.083,19,1.858]],["body/modules/AppModule.html",[1,2.704,2,1.362,3,0.35,4,0.302,5,0.302,7,0.695,8,0.039,9,0.643,10,2.549,11,2.206,12,0.35,13,0.017,16,0.024,17,0.024,18,1.711,19,3.59,20,1.187,21,1.187,22,1.475,23,1.475,24,1.187,25,2.401,26,1.475,27,2.206,28,2.206,29,2.206,30,2.549,31,2.848,32,2.293,33,2.069,34,2.075,35,1.475,36,1.475,37,2.679,38,2.337,39,2.679,40,2.679,41,2.679,42,2.679,43,2.679,44,1.32,45,2.679]],["title/injectables/AppService.html",[10,1.477,46,1.083]],["body/injectables/AppService.html",[3,0.5,4,0.43,5,0.43,7,0.5,8,0.038,9,0.917,10,2.352,12,0.5,13,0.025,16,0.031,17,0.031,46,1.725,47,2.104,48,3.147,49,0.822,50,2.352,51,5.454,52,1.129,53,3.822,54,1.883,55,1.725,56,1.883,57,3.822,58,3.822]],["title/controllers/AuthController.html",[0,1.083,59,1.858]],["body/controllers/AuthController.html",[0,1.427,2,1.427,3,0.516,4,0.445,5,0.445,7,0.637,8,0.039,9,0.947,12,0.516,13,0.026,14,2.174,15,1.75,16,0.032,17,0.032,33,2.113,59,3.02,60,3.251,61,2.791,62,3.948,63,3.251,64,3.948]],["title/modules/AuthModule.html",[18,1.083,30,1.477]],["body/modules/AuthModule.html",[2,1.514,3,0.408,4,0.352,5,0.352,7,0.661,8,0.038,9,0.749,12,0.408,13,0.02,16,0.027,17,0.027,18,1.708,20,1.384,21,1.384,22,1.719,23,1.719,24,1.384,25,2.602,26,2.602,30,2.729,32,1.856,33,2.341,34,2.306,35,1.719,36,1.719,38,1.936,59,2.93,63,2.571,65,2.571,66,3.123,67,2.571,68,3.123,69,2.597,70,3.123,71,2.571]],["title/injectables/AuthService.html",[33,1.199,46,1.083]],["body/injectables/AuthService.html",[3,0.357,4,0.307,5,0.307,7,0.5,8,0.039,9,0.655,12,0.357,13,0.018,15,1.21,16,0.025,17,0.025,33,1.528,44,1.882,46,1.381,47,1.503,49,0.587,50,1.882,52,1.301,54,1.882,55,2.028,56,1.882,69,1.693,72,2.248,73,2.866,74,3.929,75,3.82,76,2.7,77,2.248,78,2.137,79,2.73,80,2.103,81,2.103,82,1.128,83,1.528,84,2.73,85,2.73,86,3.82,87,3.929,88,2.959,89,2.73,90,1.93,91,2.248,92,2.248,93,2.248,94,2.248,95,1.93,96,2.73,97,2.73,98,2.73,99,2.248]],["title/classes/CreatePostDto.html",[13,0.019,100,1.477]],["body/classes/CreatePostDto.html",[3,0.192,4,0.165,5,0.165,7,0.534,8,0.039,12,0.192,13,0.019,16,0.015,17,0.015,49,0.315,52,1.407,55,1.855,82,1.569,83,1.906,99,2.852,100,1.173,101,0.649,102,3.447,103,1.035,104,1.333,105,2.476,106,3.008,107,3.008,108,3.543,109,3.008,110,3.008,111,3.811,112,3.042,113,3.008,114,3.138,115,2.112,116,1.464,117,1.464,118,1.464,119,1.464,120,2.147,121,1.464,122,2.38,123,1.96,124,1.96,125,2.38,126,1.464,127,1.464,128,1.464,129,2.38,130,1.464,131,1.464,132,3.008,133,1.464,134,1.464,135,1.464,136,1.464,137,1.464,138,3.464,139,3.464,140,1.96,141,2.38,142,2.38,143,2.38,144,2.38,145,2.38,146,1.476,147,2.38,148,1.464,149,1.464,150,1.464,151,1.464,152,1.464,153,2.852,154,1.464,155,1.206,156,1.96,157,1.464,158,1.464,159,1.035,160,1.464,161,1.464,162,0.908,163,1.173,164,1.035,165,1.464,166,3.138,167,3.543,168,0.721,169,2.887,170,2.363,171,3.042,172,2.38,173,1.464,174,3.008,175,1.206,176,1.206,177,2.38,178,2.38,179,2.38,180,0.721,181,1.203,182,1.464,183,2.38,184,1.464,185,1.464,186,1.464,187,1.206,188,1.464,189,1.96,190,1.683]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.019,120,1.858]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.452,4,0.389,5,0.389,7,0.452,8,0.038,12,0.452,13,0.029,16,0.029,17,0.029,49,0.743,52,1.322,55,1.618,82,1.322,101,1.531,102,3.511,104,1.984,115,1.984,120,2.775,163,2.447,164,3.511,169,3.164,170,3.257,180,1.702,189,4.089,190,3.511,191,2.843,192,3.454,193,3.454,194,3.454]],["title/classes/CreateUserDTO.html",[13,0.019,195,1.65]],["body/classes/CreateUserDTO.html",[3,0.332,4,0.286,5,0.286,7,0.332,8,0.038,12,0.332,13,0.023,16,0.023,17,0.023,49,0.546,52,1.364,55,1.934,82,1.364,83,1.45,87,3.485,90,2.992,101,1.124,104,1.607,115,2.047,140,2.986,169,3.454,170,2.863,171,2.564,175,2.089,176,2.986,180,1.25,187,2.986,195,1.997,196,4.023,197,2.089,198,3.485,199,4.233,200,2.537,201,2.537,202,2.537,203,2.537,204,2.537,205,2.537,206,2.537,207,3.627,208,3.627,209,3.627,210,3.627,211,3.627,212,3.627,213,3.627,214,5.083,215,3.627,216,1.997,217,3.627,218,3.627,219,2.537,220,3.627,221,2.537,222,3.627,223,2.537,224,2.537]],["title/classes/GetUsersParamDto.html",[13,0.019,225,1.65]],["body/classes/GetUsersParamDto.html",[3,0.425,4,0.366,5,0.366,7,0.631,8,0.038,12,0.425,13,0.031,16,0.028,17,0.028,44,2.119,49,0.699,52,0.96,82,1.424,83,1.72,88,3.309,101,1.44,104,1.906,115,1.44,146,2.667,159,2.297,167,3.541,168,1.601,171,3.041,180,1.601,181,1.3,216,2.654,225,2.368,226,3.541,227,2.667,228,2.676,229,3.25,230,3.541,231,3.25,232,3.25,233,3.541,234,3.25]],["title/classes/PatchPostDto.html",[13,0.019,235,1.65]],["body/classes/PatchPostDto.html",[3,0.441,4,0.38,5,0.38,7,0.642,8,0.039,12,0.441,13,0.029,16,0.029,17,0.029,49,0.725,52,0.996,82,0.996,88,3.349,100,1.662,101,1.495,103,2.384,104,1.953,115,1.495,155,2.777,162,2.091,166,3.629,168,1.662,170,2.732,180,1.662,181,1.349,216,2.426,233,3.629,235,2.426,236,3.629,237,3.629,238,4.408,239,3.373,240,3.373,241,2.777,242,2.384,243,3.373]],["title/classes/PatchUsersDto.html",[13,0.019,244,1.858]],["body/classes/PatchUsersDto.html",[3,0.522,4,0.45,5,0.45,7,0.642,8,0.038,12,0.522,13,0.026,16,0.032,17,0.032,101,1.769,162,2.475,195,2.198,237,4.038,241,3.287,244,3.041,245,3.287,246,3.287,247,4.905,248,3.287,249,3.287,250,3.287]],["title/controllers/PostsController.html",[0,1.083,251,1.858]],["body/controllers/PostsController.html",[0,0.767,2,0.767,3,0.278,4,0.239,5,0.239,7,0.595,8,0.039,9,0.509,12,0.278,13,0.014,14,1.169,15,0.941,16,0.021,17,0.021,49,0.457,50,1.569,52,1.128,54,1.882,55,1.38,56,1.882,61,1.501,73,2.865,80,2.103,81,2.103,82,1.128,83,1.527,100,2.351,112,2.251,115,1.693,156,2.621,162,1.974,163,1.569,168,1.046,181,1.697,235,2.627,242,2.251,251,1.974,252,1.748,253,2.124,254,2.621,255,3.184,256,3.184,257,1.748,258,3.184,259,2.251,260,3.184,261,4.243,262,4.243,263,4.243,264,2.124,265,2.124,266,2.124,267,3.184,268,2.124,269,2.621,270,2.124,271,2.621,272,2.124,273,2.124,274,1.748,275,1.748,276,2.621,277,1.882,278,1.748,279,3.145,280,3.82,281,1.748,282,1.501,283,1.501,284,2.124,285,2.124,286,2.124,287,2.124,288,2.621,289,2.124,290,2.124,291,2.124,292,2.124,293,2.124,294,2.124]],["title/modules/PostsModule.html",[18,1.083,31,1.65]],["body/modules/PostsModule.html",[2,1.536,3,0.418,4,0.359,5,0.359,7,0.666,8,0.038,9,0.766,12,0.418,13,0.021,16,0.027,17,0.027,18,1.727,20,1.415,21,1.415,22,1.757,23,1.757,24,1.415,25,2.631,26,1.757,31,3.114,32,2.418,34,2.34,35,1.757,36,1.757,38,2.635,71,2.628,251,2.962,277,2.688,278,2.628,295,2.628,296,2.628,297,3.192,298,3.192,299,3.192]],["title/injectables/PostsService.html",[46,1.083,277,1.477]],["body/injectables/PostsService.html",[3,0.306,4,0.263,5,0.263,7,0.582,8,0.039,9,0.561,12,0.306,13,0.015,14,1.287,15,1.036,16,0.022,17,0.022,44,2.331,46,1.236,47,1.287,49,0.503,50,1.685,52,1.313,54,1.992,55,1.461,56,1.992,73,2.939,76,1.653,77,1.925,78,1.976,80,2.448,81,2.448,82,1.313,83,1.778,92,1.925,95,1.653,100,2.515,105,3.661,114,3.661,235,2.81,242,2.417,254,2.815,257,2.815,269,1.925,277,1.685,282,1.653,283,1.653,300,1.925,301,2.815,302,3.419,303,2.338,304,2.338,305,3.419,306,2.338,307,3.419,308,2.338,309,2.338,310,2.815,311,2.815]],["title/controllers/UsersController.html",[0,1.083,312,1.858]],["body/controllers/UsersController.html",[0,0.569,2,0.569,3,0.206,4,0.177,5,0.177,7,0.552,8,0.038,9,0.377,12,0.206,13,0.01,14,0.866,15,0.697,16,0.016,17,0.016,44,1.243,49,0.338,50,1.243,52,1.168,54,1.948,55,1.141,56,1.948,61,1.112,73,2.91,78,1.263,80,1.738,81,2.177,82,1.309,83,1.263,115,1.752,123,2.974,124,2.974,146,2.239,163,1.78,168,0.775,181,1.445,195,2.44,216,2.876,225,2.323,227,2.451,244,2.856,250,1.295,259,1.783,271,1.295,274,1.295,275,2.077,276,2.6,279,2.077,281,1.295,282,1.112,283,1.112,288,1.295,310,2.077,312,1.564,313,1.295,314,2.523,315,3.612,316,3.158,317,2.523,318,3.612,319,1.574,320,1.574,321,3.612,322,1.574,323,1.574,324,3.474,325,3.257,326,1.574,327,2.523,328,2.523,329,2.523,330,1.574,331,2.523,332,2.523,333,2.523,334,3.158,335,1.574,336,2.523,337,2.523,338,2.523,339,1.574,340,1.574,341,1.574,342,3.612,343,1.574,344,3.158,345,1.295,346,1.295,347,1.574,348,1.295,349,3.158,350,1.574,351,1.574,352,1.574,353,1.574,354,1.295,355,1.574,356,1.574,357,1.574,358,1.574,359,1.574,360,1.574,361,1.574,362,1.574,363,1.574,364,1.574,365,1.574,366,1.574,367,1.574,368,1.574]],["title/modules/UsersModule.html",[18,1.083,32,1.329]],["body/modules/UsersModule.html",[2,1.514,3,0.408,4,0.352,5,0.352,7,0.661,8,0.038,9,0.749,12,0.408,13,0.02,16,0.027,17,0.027,18,1.708,20,1.384,21,1.384,22,1.719,23,1.719,24,1.384,25,2.602,26,2.602,30,2.064,32,2.455,34,2.306,35,1.719,36,1.719,38,1.936,69,2.597,78,2.341,312,2.93,348,2.571,369,2.571,370,2.571,371,2.571,372,3.123,373,3.123,374,3.123]],["title/injectables/UsersService.html",[46,1.083,78,1.199]],["body/injectables/UsersService.html",[3,0.262,4,0.226,5,0.226,7,0.482,8,0.039,9,0.481,12,0.262,13,0.024,15,0.889,16,0.02,17,0.02,33,1.941,44,1.502,46,1.102,47,1.104,49,0.431,50,1.502,52,1.089,54,1.502,55,1.602,56,1.502,69,1.243,73,2.57,74,2.51,76,2.913,78,1.219,80,2.031,81,2.031,82,1.089,83,1.475,88,2.748,90,2.913,91,1.651,93,1.651,94,1.651,95,1.417,153,2.51,181,0.802,198,3.393,216,2.672,225,2.57,227,2.748,230,2.51,301,3.037,311,2.51,324,3.393,325,2.913,345,1.651,346,1.651,375,1.651,376,3.049,377,2.51,378,3.049,379,3.049,380,3.049,381,3.049,382,2.005,383,2.005,384,3.049,385,3.049,386,2.005,387,2.005,388,3.049,389,3.049,390,2.005,391,3.049,392,2.005,393,2.005,394,2.005,395,2.005,396,2.005,397,3.049,398,3.049,399,2.005,400,2.005]],["title/coverage.html",[401,2.88]],["body/coverage.html",[0,1.731,1,1.706,5,0.31,6,2.265,8,0.038,10,1.356,13,0.034,16,0.025,17,0.025,24,1.219,33,1.1,46,1.731,48,2.265,59,1.706,60,2.265,72,2.265,78,1.1,82,0.812,100,1.356,102,2.715,103,2.715,120,1.706,163,1.356,164,1.945,191,2.265,195,1.515,196,2.265,197,2.265,225,1.515,226,2.265,227,1.706,228,2.265,235,1.515,236,2.265,244,1.706,245,2.265,246,2.265,251,1.706,252,2.265,259,1.945,277,1.356,300,2.265,312,1.706,313,2.265,375,2.265,377,2.265,401,1.945,402,2.751,403,2.751,404,2.751,405,5.814,406,4.789,407,4.425,408,3.841,409,2.265,410,2.751,411,2.751,412,2.751,413,3.841,414,2.751,415,2.751,416,2.751,417,2.751]],["title/dependencies.html",[21,1.596,418,2.068]],["body/dependencies.html",[8,0.039,9,0.912,13,0.031,16,0.031,17,0.031,21,1.685,159,2.687,168,1.873,180,1.873,248,3.13,249,3.13,419,3.802,420,3.802,421,5.194,422,3.802,423,3.802,424,3.802,425,3.802,426,3.802,427,3.802,428,3.802,429,3.802,430,3.802,431,3.802,432,3.802,433,3.802]],["title/miscellaneous/enumerations.html",[434,1.557,435,2.965]],["body/miscellaneous/enumerations.html",[8,0.038,16,0.03,17,0.03,49,0.788,108,3.829,112,3.287,163,2.291,190,4.117,325,3.287,434,2.272,435,3.018,436,3.666,437,3.666,438,3.666,439,4.651,440,4.651,441,3.666,442,4.651,443,3.666,444,3.666,445,4.651,446,4.651]],["title/miscellaneous/functions.html",[434,1.557,447,2.965]],["body/miscellaneous/functions.html",[8,0.034,16,0.034,17,0.034,24,2.469,49,0.96,409,3.676,434,2.768,447,3.676,448,4.465]],["title/index.html",[49,0.54,449,2.512,450,2.512]],["body/index.html",[4,0.326,8,0.038,16,0.026,17,0.026,146,2.818,181,1.158,354,2.384,401,2.047,451,2.896,452,2.896,453,3.979,454,2.896,455,2.896,456,2.896,457,2.896,458,2.896,459,2.896,460,4.546,461,2.896,462,2.896,463,2.896,464,2.896,465,5.431,466,2.896,467,2.896,468,5.302,469,2.896,470,2.896,471,3.979,472,2.896,473,2.896,474,2.896,475,2.896,476,3.979,477,3.979,478,2.896,479,2.896,480,2.896,481,3.979,482,3.979,483,2.896,484,2.896,485,2.896,486,2.896,487,2.896,488,2.384,489,2.896,490,2.896,491,2.896,492,2.896,493,2.896,494,2.896,495,2.896,496,2.896,497,2.896,498,2.896,499,2.384,500,2.896,501,2.896,502,2.896,503,2.896,504,2.896,505,2.896,506,2.384]],["title/modules.html",[20,1.806]],["body/modules.html",[8,0.032,16,0.032,17,0.032,19,2.56,20,1.831,30,2.035,31,2.274,32,1.831,488,4.613,507,5.603,508,5.603,509,5.603]],["title/overview.html",[510,3.355]],["body/overview.html",[2,1.051,8,0.038,10,2.245,16,0.026,17,0.026,18,1.051,19,3.587,20,1.289,21,1.289,22,1.601,23,1.601,24,1.289,25,1.601,26,1.601,27,2.394,28,2.394,29,2.394,30,2.615,31,2.993,32,2.409,33,2.214,34,2.197,35,1.601,36,1.601,47,1.601,65,2.394,67,2.394,78,2.174,101,1.289,277,2.245,295,2.394,296,2.394,369,2.394,370,2.394,371,2.394,510,2.394,511,4.556,512,2.908]],["title/properties.html",[104,1.596,418,2.068]],["body/properties.html",[8,0.038,16,0.034,17,0.034,104,1.942,181,1.753,499,3.608,506,3.608,513,4.383,514,4.383,515,4.383]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":514,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":310,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["1.1.23",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["10})@apiquery({name",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{}}}],["123",{"_index":400,"title":{},"body":{"injectables/UsersService.html":{}}}],["1234",{"_index":234,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["1234'})@isoptional()@isint()@type(undefined",{"_index":231,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2",{"_index":311,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["2.0.5",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":261,"title":{},"body":{"controllers/PostsController.html":{}}}],["201",{"_index":262,"title":{},"body":{"controllers/PostsController.html":{}}}],["4",{"_index":511,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":512,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["amazing",{"_index":489,"title":{},"body":{"index.html":{}}}],["api",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation",{"_index":279,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":258,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@matches(/^[a",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({description",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional()@isarray()@isoptional()@isstring({each",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isdate()@isoptional()@type(undefined",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isoptional()@isstring",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isstring()@isoptional()@isjson",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isurl()@isoptional",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional({description",{"_index":229,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":280,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags",{"_index":281,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["app'})@apiquery({name",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":459,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/providers/auth.service",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":59,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":499,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":33,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["backers",{"_index":490,"title":{},"body":{"index.html":{}}}],["blog",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["blog'})@apiresponse({status",{"_index":260,"title":{},"body":{"controllers/PostsController.html":{}}}],["body",{"_index":274,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":509,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":507,"title":{},"body":{"modules.html":{}}}],["building",{"_index":454,"title":{},"body":{"index.html":{}}}],["business",{"_index":379,"title":{},"body":{"injectables/UsersService.html":{}}}],["character",{"_index":218,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["characters",{"_index":213,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":101,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_postsmodule",{"_index":295,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":297,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":296,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":369,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":370,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":371,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["connect",{"_index":376,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(createuserdto",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(email",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(getusersparamdto",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(id",{"_index":399,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(usersservice",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":105,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":401,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{}}}],["created",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["createpost",{"_index":254,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["createpost(@body",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":257,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["createpostdto",{"_index":100,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":120,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":195,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"classes/PatchUsersDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusers",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{}}}],["d)(?=.*[a",{"_index":224,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["date",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["decorators",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["defaultvaluepipe",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":321,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":467,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["draft",{"_index":442,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":478,"title":{},"body":{"index.html":{}}}],["each",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/UsersService.html":{}}}],["efficient",{"_index":455,"title":{},"body":{"index.html":{}}}],["eight",{"_index":212,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["email",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/UsersService.html":{}}}],["endpoint",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["entries",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["enum",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":435,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/posttype.enum",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/status.enum",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":237,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{}}}],["false",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["featuredimageurl",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["fetches",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":301,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":305,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":198,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UsersService.html":{}}}],["forwardref",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":453,"title":{},"body":{"index.html":{}}}],["function",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":447,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":267,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":255,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":266,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":449,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":316,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":225,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ghozi",{"_index":397,"title":{},"body":{"injectables/UsersService.html":{}}}],["ghozi@gmail.com",{"_index":398,"title":{},"body":{"injectables/UsersService.html":{}}}],["grow",{"_index":485,"title":{},"body":{"index.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":496,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":503,"title":{},"body":{"index.html":{}}}],["id",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":49,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":46,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":464,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":466,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["isarray",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isdate",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isemail",{"_index":220,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isenum",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(status",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":233,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isjson",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/PatchPostDto.html":{}}}],["isoptional",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{}}}],["isstring()@isnotempty",{"_index":192,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@isemail",{"_index":200,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":202,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*\\d)(?=.*[a",{"_index":206,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":204,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isurl",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["john",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["john@doe.com",{"_index":396,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":492,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":500,"title":{},"body":{"index.html":{}}}],["key",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{}}}],["lastname",{"_index":199,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":215,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["letters",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":506,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":482,"title":{},"body":{"index.html":{}}}],["limit",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["matches",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["matches(/^[a",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":221,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(96",{"_index":222,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["message",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["meta",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["method",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["methods",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":211,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(3",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(4",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":223,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["miscellaneous",{"_index":434,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":481,"title":{},"body":{"index.html":{}}}],["mode",{"_index":471,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":495,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":501,"title":{},"body":{"index.html":{}}}],["name",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["neds",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["needed",{"_index":243,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["needed'})@isint()@isnotempty",{"_index":239,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["nest",{"_index":460,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":505,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":248,"title":{},"body":{"classes/PatchUsersDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":259,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":452,"title":{},"body":{"index.html":{}}}],["npm",{"_index":465,"title":{},"body":{"index.html":{}}}],["number",{"_index":216,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["one",{"_index":214,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["open",{"_index":483,"title":{},"body":{"index.html":{}}}],["operations",{"_index":380,"title":{},"body":{"injectables/UsersService.html":{}}}],["option.dto",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["option.dto.ts",{"_index":191,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["option.dto.ts:6",{"_index":193,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["option.dto.ts:9",{"_index":194,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["optional",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":510,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":418,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":275,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto.ts",{"_index":228,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["params.dto.ts:13",{"_index":232,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parseintpipe",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["partialtype",{"_index":241,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{}}}],["partialtype(createpostdto",{"_index":238,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":247,"title":{},"body":{"classes/PatchUsersDto.html":{}}}],["password",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{}}}],["patch",{"_index":276,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpost",{"_index":302,"title":{},"body":{"injectables/PostsService.html":{}}}],["patchpost(patchpostdto",{"_index":307,"title":{},"body":{"injectables/PostsService.html":{}}}],["patchpostdto",{"_index":235,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["patchuser",{"_index":317,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchusersdto",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusersdto",{"_index":244,"title":{"classes/PatchUsersDto.html":{}},"body":{"classes/PatchUsersDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["per",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["perform",{"_index":378,"title":{},"body":{"injectables/UsersService.html":{}}}],["please",{"_index":493,"title":{},"body":{"index.html":{}}}],["position",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{}}}],["post",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@isstring()@minlength(4)@isnotempty",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto",{"_index":242,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["post.dto.ts",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:102",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:11",{"_index":240,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:27",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:34",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:43",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:50",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:55",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:61",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:66",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:72",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:79",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":253,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":299,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":251,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":277,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["posttype",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype})@isnotempty()@isenum(posttype",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["prefix",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":473,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":451,"title":{},"body":{"index.html":{}}}],["project",{"_index":484,"title":{},"body":{"index.html":{}}}],["properties",{"_index":104,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":278,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":446,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":494,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":463,"title":{},"body":{"index.html":{}}}],["request",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":263,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":445,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":468,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":456,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":443,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scheduled",{"_index":444,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["series",{"_index":440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":457,"title":{},"body":{"index.html":{}}}],["services",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["side",{"_index":458,"title":{},"body":{"index.html":{}}}],["slug",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUsersDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":217,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["specific",{"_index":230,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/UsersService.html":{}}}],["sponsors",{"_index":487,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../posttype.enum.ts",{"_index":436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status.enum.ts",{"_index":437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":374,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:11",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:17",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":409,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":102,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":236,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/status.enum.ts",{"_index":441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":252,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:13",{"_index":268,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:25",{"_index":265,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:37",{"_index":273,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":298,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":300,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":306,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:27",{"_index":304,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:31",{"_index":308,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:7",{"_index":303,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":196,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":226,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":245,"title":{},"body":{"classes/PatchUsersDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":375,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:21",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:43",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:9",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:44",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":320,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:59",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":322,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":372,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":469,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":472,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":474,"title":{},"body":{"index.html":{}}}],["started",{"_index":450,"title":{"index.html":{}},"body":{}}],["starter",{"_index":462,"title":{},"body":{"index.html":{}}}],["statements",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"miscellaneous/enumerations.html":{}}}],["status})@isnotempty()@isenum(status",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["stay",{"_index":497,"title":{},"body":{"index.html":{}}}],["story",{"_index":439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["succes",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{}}}],["succes'})@post",{"_index":264,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":488,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":508,"title":{},"body":{"modules.html":{}}}],["table",{"_index":377,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":477,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":480,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":479,"title":{},"body":{"index.html":{}}}],["tests",{"_index":476,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":486,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.createpost(createpostdto",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findall(userid",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.patchpost(patchpostdto",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getusersparamdto",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid('1234",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":309,"title":{},"body":{"injectables/PostsService.html":{}}}],["title",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["touch",{"_index":498,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":504,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":249,"title":{},"body":{"classes/PatchUsersDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":461,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":475,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":515,"title":{},"body":{"properties.html":{}}}],["update",{"_index":271,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["updated",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{}}}],["updated'})@patch",{"_index":272,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost",{"_index":256,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostdto",{"_index":270,"title":{},"body":{"controllers/PostsController.html":{}}}],["updateuser",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{}}}],["url",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":250,"title":{},"body":{"classes/PatchUsersDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":197,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":203,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:22",{"_index":205,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:27",{"_index":201,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:39",{"_index":219,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userid",{"_index":269,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":227,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":373,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.dto.ts",{"_index":246,"title":{},"body":{"classes/PatchUsersDto.html":{},"coverage.html":{}}}],["users/users.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":312,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":78,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validator",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":513,"title":{},"body":{"properties.html":{}}}],["want",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["watch",{"_index":470,"title":{},"body":{"index.html":{}}}],["website",{"_index":502,"title":{},"body":{"index.html":{}}}],["without",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":491,"title":{},"body":{"index.html":{}}}],["z0",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*?&]{8",{"_index":210,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["z])(?=.*[@$!%*?&])[a",{"_index":208,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["z])(?=.*[a",{"_index":207,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["za",{"_index":209,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["zoom",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthService } from './auth/providers/auth.service';\n\n// User Created Module\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService, AuthService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  public login(email: string, password: string, id: string) {\n    const user = this.usersService.findOneById('1234');\n    console.log(email, password, id, user);\n    return 'sample_token';\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostType})@IsNotEmpty()@IsEnum(PostType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsDate()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. For example \"My-url'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Status})@IsNotEmpty()@IsEnum(Status)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsArray()@IsOptional()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'this is the title for the blog post'})@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { PostType } from '../enums/postType.enum';\nimport { Status } from '../enums/status.enum';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-option.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsDate,\n  IsEnum,\n  IsArray,\n  MinLength,\n  Matches,\n  IsJSON,\n  IsUrl,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    description: 'this is the title for the blog post',\n  })\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: PostType,\n  })\n  @IsNotEmpty()\n  @IsEnum(PostType)\n  postType: PostType;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. For example \"My-url',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: Status,\n  })\n  @IsNotEmpty()\n  @IsEnum(Status)\n  status: Status;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  content?: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional()\n  @IsUrl()\n  @IsOptional()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional()\n  @IsDate()\n  @IsOptional()\n  @Type(() => Date)\n  publishOn?: Date;\n\n  @ApiPropertyOptional()\n  @IsArray()\n  @IsOptional()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description: 'The key can be any string',\n        },\n        value: {\n          type: 'any',\n          description: 'any value',\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-option.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-option.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-option.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: 'minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsEmail,\n  MinLength,\n  MaxLength,\n  Matches,\n} from 'class-validator';\n\nexport class CreateUserDTO {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName?: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message:\n        'minimum eight characters, at least one letter, one number and one special character',\n    },\n  )\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with specific id', example: '1234'})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-params.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Get user with specific id',\n    example: '1234',\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'id is needed'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'id is needed',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUsersDto.html":{"url":"classes/PatchUsersDto.html","title":"class - PatchUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-users.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDTO)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDTO } from './create-user.dto';\n\nexport class PatchUsersDto extends PartialType(CreateUserDTO) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'create a new blog'})@ApiResponse({status: 200, description: 'You get a 201 response if succes'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'update a blog'})@ApiResponse({status: 201, description: '200 response if updated'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n\n  @Get('/:userId?')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  @ApiOperation({\n    summary: 'create a new blog',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'You get a 201 response if succes',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    return this.postsService.createPost(createPostDto);\n  }\n\n  @ApiOperation({\n    summary: 'update a blog',\n  })\n  @ApiResponse({\n    status: 201,\n    description: '200 response if updated',\n  })\n  @Patch()\n  public updatePost(@Body() patchPostDto: PatchPostDto) {\n    return this.postsService.patchPost(patchPostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPost\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                patchPost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CreatePostDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patchPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchPost(patchPostDto: PatchPostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchPostDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { CreatePostDto } from '../dtos/create-post.dto';\nimport { PatchPostDto } from '../dtos/patch-post.dto';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly usersService: UsersService) {}\n\n  public findAll(userId: string) {\n    const user = this.usersService.findOneById(userId);\n\n    return [\n      {\n        user: user,\n        title: 'title 1',\n        content: 'content 1',\n      },\n      {\n        user: user,\n        title: 'title 2',\n        content: 'content 2',\n      },\n    ];\n  }\n\n  public createPost(createPostDto: CreatePostDto) {\n    return createPostDto;\n  }\n\n  public patchPost(patchPostDto: PatchPostDto) {\n    return patchPostDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                            \n                                    \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users on the app'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the API', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUsersDto: PatchUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUsersDto\n                                            \n                                                            PatchUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUsersDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { CreateUserDTO } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-params.dto';\nimport { PatchUsersDto } from './dtos/patch-users.dto';\nimport { UsersService } from './providers/users.service';\n\nimport {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Put,\n  Delete,\n  Param,\n  Query,\n  Body,\n  ParseIntPipe,\n  DefaultValuePipe,\n} from '@nestjs/common';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get('/:id?')\n  @ApiOperation({\n    summary: 'Fetches a list of registered users on the app',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description: 'The position of the page number that you want the API',\n    example: 1,\n  })\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUsersParamDto, limit, page);\n  }\n\n  @Post()\n  public createUsers(@Body() createUserDto: CreateUserDTO) {\n    console.log(createUserDto instanceof CreateUserDTO);\n    return 'You sent a Post request to users endpoint';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUsersDto: PatchUsersDto) {\n    return patchUsersDto;\n  }\n\n  @Put()\n  public updateUser() {\n    return 'update user with Put decorator';\n  }\n\n  @Delete()\n  public deleteUser() {\n    return 'delete user';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to connect to users table and perform business operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            this is constructor when 2 services neds each other\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:21\n                        \n                    \n\n\n            \n                \n                        method for get all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:43\n                        \n                    \n\n\n            \n                \n                        find specific user by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstname: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-params.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n/**\n * Class to connect to users table and perform business operations\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * this is constructor when 2 services neds each other\n   */\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * method for get all users\n   */\n  public findAll(\n    getUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    const isAuth = this.authService.isAuth();\n    console.log(getUsersParamDto, limit, page, isAuth);\n    return [\n      {\n        firstName: 'john',\n        email: 'john@doe.com',\n      },\n      {\n        firstName: 'ghozi',\n        email: 'ghozi@gmail.com',\n      },\n    ];\n  }\n\n  /**\n   * find specific user by id\n   */\n  public findOneById(id: string) {\n    console.log(id);\n    return {\n      id: 123,\n      firstname: 'ghozi',\n      email: 'ghozi@gmail.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-option.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-params.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-users.dto.ts\n            \n            class\n            PatchUsersDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostType   (src/.../postType.enum.ts)\n                        \n                        \n                            Status   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n    src/posts/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULE\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
